{"version":3,"sources":["firebase.utils.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","data","items","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\nimport { collection, doc, getDoc, getDocs, getFirestore, query, setDoc, writeBatch } from 'firebase/firestore';\nconst firebaseConfig = {\n\n    apiKey: \"AIzaSyA5Al7yntpvg4GqCeSKCzgERw-wiCbhvi0\",\n  \n    authDomain: \"marvel-comics-shop-db.firebaseapp.com\",\n  \n    projectId: \"marvel-comics-shop-db\",\n  \n    storageBucket: \"marvel-comics-shop-db.appspot.com\",\n  \n    messagingSenderId: \"714492416397\",\n  \n    appId: \"1:714492416397:web:5d4914bfa81e58838f2dc4\",\n  \n    measurementId: \"G-5SE39MBWLC\"\n  \n};\n  \n  \nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth(); \nexport const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider);\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey,objectsToAdd) =>Â {\n    const collectionRef = collection(db,collectionKey);\n    const batch = writeBatch(db);\n    objectsToAdd.forEach((object) =>{\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object);\n\n    });\n\n    await batch.commit();\n    console.log('done');\n\n}  \nexport const getCategoriesAndDocuments = async () => {\n    const collectionRef = collection(db,'categories');\n    const q = query(collectionRef);\n\n    const querySnapshot = await getDocs(q);\n\n    const categoryMap = querySnapshot.docs.reduce((acc,docSnapshot) => {\n        const {title, items} = docSnapshot.data();\n        acc[title.toLowerCase()]= items;\n        return acc;\n    }, {});\n    return categoryMap;\n}\n\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log(userDocRef);\n    const userSnapshot = await getDoc(userDocRef);\n  \n   // if user exists\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n    try {\n        await setDoc(userDocRef, {\n            displayName,\n            email,\n            createdAt,\n            ...additionalInformation\n        });\n    } catch(e) {\n        console.log('error creating the user', e.message);\n    }\n}\n\n   // return userDocRef\n  \n    return userDocRef;\n}\nexport const createAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await createUserWithEmailAndPassword(auth,email,password);\n    \n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await signInWithEmailAndPassword(auth,email,password);\n}\nexport const signOutUser = () => signOut(auth);\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth,callback);\n\n"],"file":"firebase.utils.dev.js"}
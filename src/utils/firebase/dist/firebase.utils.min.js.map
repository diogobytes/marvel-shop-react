{"version":3,"sources":["firebase.utils.js"],"names":["_app","require","_auth","_firestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","GoogleAuthProvider","setCustomParameters","googleProvider","getAuth","signInWithPopup","auth","prompt","db","getFirestore","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","regeneratorRuntime","async","_context","prev","next","collection","writeBatch","signInWithGooglePopup","object","docRef","doc","set","awrap","commit","console","log","stop","getCategoriesAndDocuments","q","querySnapshot","categoryMap","_context2","query","getDocs","sent","forEach","docs","acc","docSnapshot","_docSnapshot$data","data","title","items","abrupt","userAuth","additionalInformation","userDocRef","displayName","email","createdAt","_context3","uid","getDoc","exists","Date","setDoc","_objectSpread","t0","message","password","_context4","signInAuthUserWithEmailAndPassword","_context5","signInWithEmailAndPassword","signOutUser","signOut","onAuthStateChangedListener","callback","onAuthStateChanged"],"mappings":"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","file":"firebase.utils.min.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\nimport { collection, doc, getDoc, getDocs, getFirestore, query, setDoc, writeBatch } from 'firebase/firestore';\nconst firebaseConfig = {\n\n    apiKey: \"AIzaSyA5Al7yntpvg4GqCeSKCzgERw-wiCbhvi0\",\n  \n    authDomain: \"marvel-comics-shop-db.firebaseapp.com\",\n  \n    projectId: \"marvel-comics-shop-db\",\n  \n    storageBucket: \"marvel-comics-shop-db.appspot.com\",\n  \n    messagingSenderId: \"714492416397\",\n  \n    appId: \"1:714492416397:web:5d4914bfa81e58838f2dc4\",\n  \n    measurementId: \"G-5SE39MBWLC\"\n  \n};\n  \n  \nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth(); \nexport const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider);\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey,objectsToAdd) =>Â {\n    const collectionRef = collection(db,collectionKey);\n    const batch = writeBatch(db);\n    objectsToAdd.forEach((object) =>{\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object);\n\n    });\n\n    await batch.commit();\n    console.log('done');\n\n}  \nexport const getCategoriesAndDocuments = async () => {\n    const collectionRef = collection(db,'categories');\n    const q = query(collectionRef);\n\n    const querySnapshot = await getDocs(q);\n\n    const categoryMap = querySnapshot.docs.reduce((acc,docSnapshot) => {\n        const {title, items} = docSnapshot.data();\n        acc[title.toLowerCase()]= items;\n        return acc;\n    }, {});\n    return categoryMap;\n}\n\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log(userDocRef);\n    const userSnapshot = await getDoc(userDocRef);\n  \n   // if user exists\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n    try {\n        await setDoc(userDocRef, {\n            displayName,\n            email,\n            createdAt,\n            ...additionalInformation\n        });\n    } catch(e) {\n        console.log('error creating the user', e.message);\n    }\n}\n\n   // return userDocRef\n  \n    return userDocRef;\n}\nexport const createAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await createUserWithEmailAndPassword(auth,email,password);\n    \n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await signInWithEmailAndPassword(auth,email,password);\n}\nexport const signOutUser = () => signOut(auth);\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth,callback);\n\n"]}
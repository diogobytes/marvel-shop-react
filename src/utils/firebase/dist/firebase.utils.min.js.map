{"version":3,"sources":["firebase.utils.js"],"names":["_app","require","_auth","_firestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","GoogleAuthProvider","setCustomParameters","googleProvider","getAuth","signInWithPopup","auth","prompt","db","getFirestore","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","displayName","email","createdAt","regeneratorRuntime","async","_context","prev","next","doc","uid","console","log","awrap","getDoc","sent","exists","Date","setDoc","_objectSpread","t0","message","abrupt","stop","createAuthUserWithEmailAndPassword","password","_context2","userSnapshot","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOutUser","signOut","callback","onAuthStateChanged"],"mappings":"iTAAA,IAAAA,KAAAC,QAAA,gBACAC,MAAAD,QAAA,iBACAE,WAAAF,QAAA,ivBACA,IAAMG,eAAiB,CAEnBC,OAAQ,0CALZC,WAAA,wCACAC,UAAA,wBACAC,cAAA,oCAWIC,kBAAmB,eAEnBC,MAAO,4CAEPC,cAAe,gBARfJ,aAAW,EAAAP,KAAAY,eAAAR,gBAEXI,eAAe,IAAAK,MAAAA,mBAIfH,eAAOI,oBAAA,CAEPH,OAAAA,mBAMEI,IAAAA,MAAc,EAAAb,MAAAc,6BAEpBD,IAAAA,sBAAmC,WAAA,OAAA,EAAAb,MAAAe,iBAAAC,KAAAH,qEAC/BI,IAAQC,IAAA,EAAAjB,WAAAkB,8BADZ,IAAAC,2BAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAIiBR,GAAG,EAAAtB,WAAA+B,KAAAd,GAAb,QAAAG,EAAAY,KAKHC,QAAQC,IAAIZ,GAThBM,EAAAE,KAAA,EAAAJ,mBAAAS,OAU+B,EAAAnC,WAAAoC,QAAOd,IAVtC,KAAA,EAAA,GAAAM,EAAAS,KAKOC,SALP,CAAAV,EAAAE,KAAA,GAAA,MAAA,OAceP,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,MACdC,EAAY,IAAIc,KAf9BX,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAAAJ,mBAAAS,OAiBc,EAAAnC,WAAAwC,QAAOlB,EAAPmB,cAAA,CACFlB,YAAAA,EAXCJ,MAAAA,EAA6BM,UAAAA,GAAAJ,KAP1C,KAAA,GAAAO,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,MAAA,GAO0CK,QAAAC,IAAA,0BAAAN,EAAAc,GAAAC,SAP1C,KAAA,GAAA,OAAAf,EAAAgB,OAAA,SAO0CtB,GAP1C,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,qEAgCO,IAAMC,mCAAqC,SAAOtB,EAAMuB,GAAb,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,GAzBRN,GAMlCyB,EAmB0C,CAAAD,EAAAlB,KAAA,EAAA,MAAA,OAAAkB,EAAAJ,OAAA,UAAA,KAAA,EAAA,OAAAI,EAAAlB,KAAA,EAAAJ,mBAAAS,OAzBR,EAAApC,MAAAmD,gCAAAnC,KAAAS,EAAAuB,IAyBQ,KAAA,EAAA,OAAAC,EAAAJ,OAAA,SAAAI,EAAAX,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAW,EAAAH,yFAlBnCtB,IAAAA,mCAAaC,SAASJ,EAATI,GAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,GACdC,GAAAA,EADcD,CAAAA,EAAAA,KAAAA,EAAAA,MAAAA,OAAAA,EAAAA,OAAAA,UAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,OAPc,EAAAzB,MAAAoD,4BAAApC,KAAAS,EAAAuB,IAOdvB,KAAAA,EAAAA,OAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,yFAPc,IAAA4B,YAAA,WAAA,OAAA,EAAArD,MAAAsD,SAAAtC,uCAW9BQ,IAAAA,2BADE,SAAA+B,GAAA,OAAA,EAAAvD,MAAAwD,oBAAAxC,KAAAuC","file":"firebase.utils.min.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\nimport { doc, getDoc, getFirestore, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n\n    apiKey: \"AIzaSyA5Al7yntpvg4GqCeSKCzgERw-wiCbhvi0\",\n  \n    authDomain: \"marvel-comics-shop-db.firebaseapp.com\",\n  \n    projectId: \"marvel-comics-shop-db\",\n  \n    storageBucket: \"marvel-comics-shop-db.appspot.com\",\n  \n    messagingSenderId: \"714492416397\",\n  \n    appId: \"1:714492416397:web:5d4914bfa81e58838f2dc4\",\n  \n    measurementId: \"G-5SE39MBWLC\"\n  \n};\n  \n  \nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth(); \nexport const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log(userDocRef);\n    const userSnapshot = await getDoc(userDocRef);\n  \n   // if user exists\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n    try {\n        await setDoc(userDocRef, {\n            displayName,\n            email,\n            createdAt,\n            ...additionalInformation\n        });\n    } catch(e) {\n        console.log('error creating the user', e.message);\n    }\n}\n\n   // return userDocRef\n  \n    return userDocRef;\n}\nexport const createAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await createUserWithEmailAndPassword(auth,email,password);\n    \n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email,password) => {\n    if(!email || !password) return;\n    return await signInWithEmailAndPassword(auth,email,password);\n}\nexport const signOutUser = () => signOut(auth);\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth,callback);\n\n"]}